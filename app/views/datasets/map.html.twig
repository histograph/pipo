{% extends "layout.html.twig" %}

{% block content %}
    <div id="resultnav">
        {% set cur = 'map' %}
        {% include 'datasets/tabnavs.twig' %}
    </div>
    <div class="row">
        <div class="col-md-8">

            <form action="" method="post">

                <h3>Name &amp; Id</h3>

                <p>Properties are what makes a Pit a Pit. 'Pit Name' and 'Pit Id' are required.</p>

                <table class="map table">
                    <tr>
                        <th>URI (of pit in dataset itself - no relations!)</th>
                        <td>
                            <select class="form-control" name="prop-uri">
                                <option value="">select column from csv</option>
                                {% for col in columns %}
                                    <option value="{{ col }}" {% if properties.uriColumn is defined and properties.uriColumn == col %}selected=""{% endif %}>{{ col }}</option>
                                {% endfor %}
                            </select>
                        </td>
                    </tr>
                    <tr>
                        <th class="required">Pit Id</th>
                        <td>

                            <select class="form-control" name="prop-id">
                                <option value="">select column from csv</option>
                                {% for col in columns %}
                                    <option value="{{ col }}"
                                        {% if properties.idColumn is defined %}
                                            {% if properties.idColumn == col %}selected=""{% endif %}
                                        {% endif %}
                                        >{{ col }}</option>
                                {% endfor %}
                            </select>
                        </td>
                    </tr>
                    <tr>
                        <th>Pit Name</th>
                        <td>

                            <select class="form-control" name="prop-name">
                                <option value="">select column from csv</option>
                                {% for col in columns %}
                                    <option value="{{ col }}"
                                        {% if properties.nameColumn is defined %}
                                            {% if properties.nameColumn == col %}selected=""{% endif %}
                                        {% endif %}
                                        >{{ col }}</option>
                                {% endfor %}
                            </select>
                        </td>
                    </tr>
                    <tr>
                        <th>Pit Type</th>
                        <td>
                            <select class="form-control" name="prop-type">
                                <option value="">select column from csv</option>
                                {% for col in columns %}
                                    <option value="{{ col }}" {% if properties.typeColumn is defined and properties.typeColumn == col %}selected=""{% endif %}>{{ col }}</option>
                                {% endfor %}
                            </select>
                            <em>or select a default type for all records in set</em>
                            <select class="form-control" name="prop-type-text">
                                <option value="">select one type for all records</option>
                                {% for type in pittypes %}
                                    <option value="{{ type }}" {% if properties.typeText is defined and properties.typeText == type %}selected=""{% endif %}>{{ type }}</option>
                                {% endfor %}
                            </select>
                        </td>
                    </tr>
                </table>

                <h3>Geometry</h3>
                <table class="map table">
                    <tr>
                        <th>geometry (geojson!)</th>
                        <td>
                            <select class="form-control" name="prop-geometry">
                                <option value="">select column from csv</option>
                                {% for col in columns %}
                                    <option value="{{ col }}" {% if properties.geometryColumn is defined and properties.geometryColumn == col %}selected=""{% endif %}>{{ col }}</option>
                                {% endfor %}
                            </select>
                        </td>
                    </tr>
                    <tr>
                        <th>or give latitude</th>
                        <td>
                            <select class="form-control" name="prop-lat">
                                <option value="">select column from csv</option>
                                {% for col in columns %}
                                    <option value="{{ col }}" {% if properties.latColumn is defined and properties.latColumn == col %}selected=""{% endif %}>{{ col }}</option>
                                {% endfor %}
                            </select>
                        </td>
                    </tr>
                    <tr>
                        <th>and longitude</th>
                        <td>
                            <select class="form-control" name="prop-long">
                                <option value="">select column from csv</option>
                                {% for col in columns %}
                                    <option value="{{ col }}" {% if properties.longColumn is defined and properties.longColumn == col %}selected=""{% endif %}>{{ col }}</option>
                                {% endfor %}
                            </select>
                        </td>
                    </tr>
                </table>

                <h3>Period</h3>
                <table class="map table">
                
                    <tr>
                        <th>validSince (no range or minimal value)</th>
                        <td>
                            <select class="form-control" name="prop-validSinceMin">
                                <option value="">select column from csv</option>
                                {% for col in columns %}
                                    <option value="{{ col }}" {% if properties.validSinceMinColumn is defined and properties.validSinceMinColumn == col %}selected=""{% endif %}>{{ col }}</option>
                                {% endfor %}
                            </select>
                            <em>or give a yyyy-mm-dd formatted date for all records in set</em>
                            <input class="form-control" type="text" value="{% if properties.validSinceMinText is defined %}{{ properties.validSinceMinText }}{% endif %}" name="prop-validSinceMin-text" placeholder="'yyyy-dd-mm' or 'yyyy'" />

                        </td>
                    </tr>
                    <tr>
                        <th>validSince (if range, maximal value)</th>
                        <td>
                            <select class="form-control" name="prop-validSinceMax">
                                <option value="">select column from csv</option>
                                {% for col in columns %}
                                    <option value="{{ col }}" {% if properties.validSinceMaxColumn is defined and properties.validSinceMaxColumn == col %}selected=""{% endif %}>{{ col }}</option>
                                {% endfor %}
                            </select>
                            <em>or give a yyyy-mm-dd formatted date for all records in set</em>
                            <input class="form-control" type="text" value="{% if properties.validSinceMaxText is defined %}{{ properties.validSinceMaxText }}{% endif %}" name="prop-validSinceMax-text" placeholder="'yyyy-dd-mm' or 'yyyy'" />

                        </td>
                    </tr>
                    <tr>
                        <th>validUntil  (no range or minimal value)</th>
                        <td>
                            <select class="form-control" name="prop-validUntilMin">
                                <option value="">select column from csv</option>
                                {% for col in columns %}
                                    <option value="{{ col }}" {% if properties.validUntilMinColumn is defined and properties.validUntilMinColumn == col %}selected=""{% endif %}>{{ col }}</option>
                                {% endfor %}
                            </select>
                            <em>or give a yyyy-mm-dd formatted date for all records in set</em>
                            <input class="form-control" type="text" value="{% if properties.validUntilMinText is defined %}{{ properties.validUntilMinText }}{% endif %}" name="prop-validUntilMin-text" placeholder="yyyy-dd-mm" />
                        </td>
                    </tr>
                    <tr>
                        <th>validUntil (if range, maximal value)</th>
                        <td>
                            <select class="form-control" name="prop-validUntilMax">
                                <option value="">select column from csv</option>
                                {% for col in columns %}
                                    <option value="{{ col }}" {% if properties.validUntilMaxColumn is defined and properties.validUntilMaxColumn == col %}selected=""{% endif %}>{{ col }}</option>
                                {% endfor %}
                            </select>
                            <em>or give a yyyy-mm-dd formatted date for all records in set</em>
                            <input class="form-control" type="text" value="{% if properties.validUntilMaxText is defined %}{{ properties.validUntilMaxText }}{% endif %}" name="prop-validUntilMax-text" placeholder="yyyy-dd-mm" />
                        </td>
                    </tr>
                    <tr>
                        <th>periodValidFor</th>
                        <td>
                            <select class="form-control" name="prop-periodValidFor">
                                <option value="">select column from csv</option>
                                {% for col in columns %}
                                    <option value="{{ col }}" {% if properties.periodValidForColumn is defined and properties.periodValidForColumn == col %}selected=""{% endif %}>{{ col }}</option>
                                {% endfor %}
                            </select>
                            <em>or select a periodValidFor for all records in set</em>
                            <select class="form-control" name="prop-periodValidFor-text">
                                <option value="">none</option>
                                {% for validFor in validFors %}
                                    <option value="{{ validFor }}" {% if properties.periodValidForText is defined and properties.periodValidForText == validFor %}selected=""{% endif %}>{{ validFor }}</option>
                                {% endfor %}
                            </select>
                        </td>
                    </tr>
                </table>

                <h3>Relations</h3>

                <p>Relations should be mapped to a field with a URI or - only if the PiT you're mapping to does not have a URI, to the PiT-id from the Erfgeothesaurus</p>

                <table class="map table">
                    {% for relation in relations %}
                        <tr>
                            <th><select class="form-control" name="relation-type[]">
                                    <option value="">select relation</option>
                                    {% for reltype in relationtypes %}
                                        <option value="{{ reltype }}" {% if relation.key == reltype %}selected=""{% endif %}>{{ reltype }}</option>
                                    {% endfor %}
                                </select>
                            </th>
                            <td>
                                <select class="form-control" name="relation-column[]">
                                    <option value="">select column from csv</option>
                                    {% for col in columns %}
                                        <option value="{{ col }}"{% if relation.column == col %}selected=""{% endif %}>{{ col }}</option>
                                    {% endfor %}
                                </select>
                                <em>or</em>
                                <input value="{{ relation.text }}" placeholder="give uri or pit uri for all recs in dataset" class="form-control" type="text" name="relation-value[]" />
                            </td>
                        </tr>
                    {% endfor %}
                    <tr>
                        <th><select class="form-control" name="relation-type[]">
                                <option value="">select relation</option>
                                {% for reltype in relationtypes %}
                                    <option value="{{ reltype }}">{{ reltype }}</option>
                                {% endfor %}
                            </select>
                        </th>
                        <td>
                            <select class="form-control" name="relation-column[]">
                                <option value="">select column from csv</option>
                                {% for col in columns %}
                                    <option value="{{ col }}">{{ col }}</option>
                                {% endfor %}
                            </select>
                            <em>or</em>
                            <input placeholder="give uri or pit uri for all recs in dataset" class="form-control" type="text" name="relation-value[]" />
                        </td>
                    </tr>
                </table>

                <h3>Data</h3>

                <p>Data can contain key/value pairs with additional data for your Pit. Just name the key and tell us in which csv column we find the corresponding value.</p>

                <table class="map table">
                    {% for item in data %}
                        <tr>
                            <th>
                                <input class="form-control" type="text" placeholder="data key name" value="{{ item.key }}" name="data-name[]" />
                            </th>
                            <td>
                                <select class="form-control" name="data-value[]">
                                    <option value="">select column from csv</option>
                                    {% for col in columns %}
                                        <option value="{{ col }}"{% if item.column == col %}selected=""{% endif %}>{{ col }}</option>
                                    {% endfor %}
                                </select>
                            </td>
                        </tr>
                    {% endfor %}
                    <tr>
                        <th>
                            <input class="form-control" type="text" placeholder="data key name" name="data-name[]" />
                        </th>
                        <td>
                            <select class="form-control" name="data-value[]">
                                <option value="">select column from csv</option>
                                {% for col in columns %}
                                    <option value="{{ col }}">{{ col }}</option>
                                {% endfor %}
                            </select>
                        </td>
                    </tr>
                </table>



                <input type="submit" value="save mapping" class="btn btn-primary" />

            </form>

        </div>
        <div class="col-md-4">

            <h1>Map dataset '{{ set.title }}'</h1>

            <ul>
                <li>If your PiTs are identified by a URI, provide that URI and always reference you PiT by this URI</li>
                <li>For PiTs without a URI, make sure to provide a permanent id and reference your PiT by this id</li>
                <li>GeoJSON is the preferred way, but for practical reasons the importer will make GeoJSON from lat and long fields as well</li>
                <li>Only provide geometry, lat or long if it originates from the source itself (e.g. if the dataset is a list of toponyms and the geometry comes from TGN, just make a hg:sameHgConcept relation to TGN uri's)</li>
                <li>Remember, longitudes go from pole to pole and start counting in Greenwich, which makes the Netherlands somewhere in the 4-6 range. Messing this up might subject you to Somali Pirates</li>
                <li>Need more relations or data fields? Save current and a new entry field will appear</li>
            </ul>


        </div>
    </div>



{% endblock %}